<?php

function widget(){
  $widgets = module_invoke_all('widgets');
  return $widgets;
}

/**
 * Implements hook_widgets()
 *
 * function widget_widgets(){
 * $items = array();
 * $items['up_to_top'] = array(
 * 'html' => 'up_to_top.html',
 * 'js' => 'up_to_top.js',
 * 'css' => 'up_to_top.css',
 * 'description' => '回到顶部悬浮框',
 * );
 *
 * $items['bottom_widget'] = array(
 * 'html' => 'bottom_widget.html',
 * 'js' => 'bottom_widget.js',
 * 'css' => 'bottom_widget.css',
 * 'description' => '底部悬浮框',
 * );
 * return $items;
 * }*/

function widget_detail_save($widget_key){
  //Get the files in the widget
  $widget_key_html = $widget_key['html'];
  $widget_key_css = $widget_key['css'];
  $widget_key_js = $widget_key['js'];
  $widget_key_path = $widget_key['path'];
  //get the filename
  $widget_file_name = strrchr($widget_key_html, '/');
  $widget_file_name = strstr($widget_file_name,'.',true);
  $widget_file_name = substr($widget_file_name,1);
  //get the widget file path
  //$widget_path = drupal_get_path('module', 'widget') . '/widgets/' . $widget_file_name;
  //get the html code in the html file
  //$widget_html = file_get_contents($widget_path . '/' . $widget_key_html);
  $widget_html = file_get_contents($widget_key_html);
  //except "\n" in the html code to avoid the mistakes in the gendered js code
  $widget_html = str_replace("\r\n", "", $widget_html);
  //use the str_replace function to replace the ['widget_path'](insert the widget absolute path) in the html code
  $widget_absolute_path = url($widget_key_path, array('absolute' => TRUE));
  $widget_html = str_replace('[widget_path]', $widget_absolute_path, $widget_html);
  //get the absolute path of the css file
  //$widget_css_path = $widget_path . "/" . $widget_key_css;
  $widget_css_absolute_path = url($widget_key_css, array('absolute' => TRUE));
  //to clear the customer css&js cache
  $query_string = variable_get('css_js_query_string', '0');
  $widget_css_absolute_path .= "?$query_string";
  //create an unique ID for the gendered js code
  $unique_id = widgets_create_unique_id($widget_file_name);
  //get the js code of the js file in the widget file
  //$extra_js_code = file_get_contents($widget_path . '/' . $widget_key_js);
  $extra_js_code = file_get_contents($widget_key_js);
  //insert the data to de widget-detail.tpl.php
  $data = array(
    'html' => $widget_html,
    'css' => $widget_css_absolute_path,
    'unique_id' => $unique_id,
    'extra_js_code' => $extra_js_code,
  );
  $widgetDetailRendered = theme('widget_detail', $data);

  $widgets_directory = 'public://widgets';
  file_prepare_directory($widgets_directory, FILE_CREATE_DIRECTORY);
  //the gendered js file path
  $created_js_path = "public://" . "/widgets/" . $unique_id . ".js";
  //check the gendered js file exist or not
  if (is_file($created_js_path)) {
    $old_created_js = file_get_contents($created_js_path);
    if ($old_created_js != $widgetDetailRendered) {
      $handle = fopen($created_js_path, "w");
      $str = fwrite($handle, $widgetDetailRendered);
      fclose($handle);
    }
  } else {
    file_unmanaged_save_data($widgetDetailRendered, $created_js_path);
  }
}

/**
 * Use md5() function to create the unique ID
 */

function widgets_create_unique_id($filename){
  $created_ID = md5($filename);
  return $created_ID;
}

/**
 * Implements hook_theme()
 */

function widget_theme(){
  return array(
    'widget' => array(
      'variables' => array(
        'unique_id' => null,
        'widget_url_js' => null,
      ),
      'template' => 'templates/widget',
    ),
    'widget_detail' => array(
      'variables' => array(
        'html' => null,
        'js' => null,
        'css' => null,
        'unique_id' => null,
      ),
      'template' => 'templates/widget-detail'
    )
  );
}

/*
 * implement hook_menu()
 */

function widget_menu(){
  $items = array();
  $items['admin/config/widgets/list'] = array(
    'title' => t('Widgets List'),
    'page callback' => 'widgets_list',
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/widgets/%'] = array(
    'title' => t('The detail gendered widget js code'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('widgets_js_form'),
    'access callback' => TRUE,
  );

  $items['admin/config/widgets/%/preview'] = array(
    'title' => t('The display for gendered widget js code '),
    'page callback' => 'widgets_preview',
    'access arguments' => array('administer users'),
  );
  return $items;
}

/**
 * list the all widgets in a page
 */
function widgets_list(){
  $output = "";
  $widgets = widget();
  $header = array(t('Widget Name'), t('Widget Description'), t('Widget JS Code'), t('Preview'));

  foreach ($widgets as $key => $widget_key) {
    $widget_description = $widget_key['description'];
    $widget_key_html_path = $widget_key['html'];
    $widget_file_name = strrchr($widget_key_html_path, '/');
    $widget_file_name = strstr($widget_file_name,'.',true);
    $widget_file_name = substr($widget_file_name,1);
    $trows[] = array(
      array('data' => $widget_file_name, 'valign' => 'top'),
      array('data' => $widget_description, 'valign' => 'top'),
      array('data' => l(t('Get the gendered js'), 'admin/config/widgets/' . $widget_file_name, array('attributes' => array('target' => '_blank'))), 'valign' => 'top'),
      array('data' => l(t('Preview'), "admin/config/widgets/$widget_file_name/preview", array('attributes' => array('target' => '_blank'))), 'valign' => 'top'),
    );
  }
  $output .= theme('table', array('header' => $header, 'rows' => $trows));
  return $output;
}


function widgets_gendered_js($widget_name)
{
  $unique_id = widgets_create_unique_id($widget_name);

  //Get the default files relative path
  $files_path = variable_get('file_' . file_default_scheme() . '_path', conf_path() . '/files');
  //Get the default files absolute path
  $widget_path = $files_path . '/widgets';
  $widget_url = url($widget_path, array('absolute' => TRUE));
  //Get the gendered js file absolute path
  $widget_url_js = $widget_url . '/' . $unique_id . ".js";
  //For clear the customer css&js cache
  $query_string = variable_get('css_js_query_string', '0');
  $widget_url_js .= "?$query_string";
  //insert the data to de widget.tpl.php
  $data = array(
    'unique_id' => $unique_id,
    'widget_url_js' => $widget_url_js,
  );
  $gendered_widget = theme('widget', $data);
  return $gendered_widget;
}

function widgets_js_form($form, &$form_state)
{

  $widget_name = arg(3);
  $widgets = widget();
  $widget = $widgets[$widget_name];
  widget_detail_save($widget);
  $widget_description = $widget['description'];
  $widget_gendered_code = widgets_gendered_js($widget_name);
  $form['widget_name'] = array(
    '#title' => t('Widget Name'),
    '#type' => 'textfield',
    '#disabled' => true,
    '#default_value' => $widget_name,
  );
  $form['widget_description'] = array(
    '#title' => t('Widget Description'),
    '#type' => 'textfield',
    '#disabled' => true,
    '#default_value' => $widget_description,
  );
  $form['widget_gendered_code'] = array(
    '#title' => t('Widget Gendered Code'),
    '#type' => 'textarea',
    '#rows' => 18,
    '#default_value' => $widget_gendered_code,
  );
  $form['recreate'] = array(
    '#type' => 'submit',
    '#value' => t('Recreate'),
    '#submit' => array('widget_recreate'),
  );
  $form['preview'] = array(
    '#type' => 'submit',
    '#value' => t('Preview'),
    '#submit' => array('widget_preview'),
  );
  $form['back_to_list'] = array(
    '#type' => 'submit',
    '#value' => t('Back'),
    '#submit' => array('back_to_widget_list'),
  );
  return $form;
}

function widgets_preview()
{
  $widget_name = arg(3);
  $widgets = widget();
  $widget = $widgets[$widget_name];
  widget_detail_save($widget);
  $widget_description = $widget['description'];
  $widget_gendered_code = widgets_gendered_js($widget_name);
  $output = '<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>' . $widget_description . '</title></head><body>';
  $output .= '<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>';
  $output .= $widget_gendered_code;
  $output .= '</body></html>';
  echo $output;
  exit;
}

function widget_recreate()
{
  $widget_name = arg(3);
  $widgets = widget();
  $widget = $widgets[$widget_name];
  widget_detail_save($widget);
  drupal_set_message(t("Recreate Successfully!"));
}

function back_to_widget_list()
{
  drupal_goto('admin/config/widgets/list');
}

function widget_preview()
{
  $widget_name = arg(3);
  drupal_goto("admin/config/widgets/$widget_name/preview");
}

